/* *****************************************
 * CSCI 205 - Software Engineering and Design
 * Fall 2023
 * Instructor: Prof. Brian King / Prof. Joshua Stough
 *
 * Name: Hunter Gehman
 * Section: 02 - 10 am
 * Date: 11/6/2023
 * Time: 9:31 AM
 *
 * Project: csci205_final_project
 * Package: org.cscigroup3project.MVC.controller
 * Class: GameController
 *
 * Description:
 *
 * ****************************************
 */
package org.cscigroup3project.MVC.controller;

import javafx.scene.Scene;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import org.cscigroup3project.MVC.model.Direction;
import org.cscigroup3project.MVC.model.GameModel;
import org.cscigroup3project.MVC.model.Player;
import org.cscigroup3project.MVC.view.GameView;


/**
 * The class implementing the logic and user interactions for the created game.
 */
public class GameController {

    private GameModel theModel;
    private GameView theView;
    private Scene theScene;
    private Player thePlayer;


    /**
     * Constructor for the GameController.
     *
     * @param theModel the game's model
     * @param theView the game's view
     * @param theScene the JavaFX scene
     */
    public GameController(GameModel theModel, GameView theView, Scene theScene) {
        this.theModel = theModel;
        this.theView = theView;
        this.theScene = theScene;

        this.thePlayer = theView.getPlayer();

        initBindings();
        initEventHandlers();
    }

    /**
     * Initialize event handlers for keyboard input.
     */
    private void initEventHandlers() {
        this.theScene.setOnKeyPressed(this::handleKeyPress);
    }

    /**
     * Initialize property bindings between the player's position and the image view's position.
     */
    private void initBindings() {
        // Bind the ImageView's position to the Player's x and y properties
        theView.getPlayerView().translateXProperty().bind(thePlayer.getxProperty());
        theView.getPlayerView().translateYProperty().bind(thePlayer.getyProperty());
        theView.getPlayerView().imageProperty().bind(thePlayer.playerImageProperty());
    }

    /**
     * Handle key press events for player movement.
     *
     * @param event The KeyEvent generated by a key press.
     */
    public void handleKeyPress(KeyEvent event) {
        if (event.getCode() == KeyCode.DOWN) {
            thePlayer.move(Direction.DOWN);
        } else if (event.getCode() == KeyCode.UP) {
            thePlayer.move(Direction.UP);
        } else if (event.getCode() == KeyCode.RIGHT) {
            thePlayer.move(Direction.RIGHT);
        } else if (event.getCode() == KeyCode.LEFT) {
            thePlayer.move(Direction.LEFT);
        }
    }


}

